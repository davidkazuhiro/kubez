#!/bin/bash

###
# Written by David Somers-Harris <david.somers-harris@rakuten.com>
# Based on https://stackoverflow.com/a/51289417

RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m'

yes_count=0
total_count=0

echo This script will check your permissions on the following context
echo 
current_context=$(kubectl config view -o json | jq '.["current-context"]')
kubectl config view -o json | jq '.contexts[] | select( .name == '"${current_context}"' )' 

sleep 5


SERVER="localhost:8001"

APIS="core "
APIS+=$(curl -s $SERVER/apis | jq -r '[.groups | .[].name] | join(" ")')

for api in $APIS; do
    case ${api} in
      'core')
        apipath=$SERVER/api/v1
        ;;
      *)
        version=$(curl -s $SERVER/apis/$api | jq -r '.preferredVersion.version')
        apipath=$SERVER/apis/$api/$version
    esac
    echo
    echo "######"
    echo "# API: ${api}"
    for type in $(curl -s ${apipath} | jq -r '.resources | .[]? | "\(.name)"')
    do
      echo -e "\nRESOURCE: ${type}"
      verbs=$(curl -s ${apipath} | jq -r '.resources | .[]? | select( .name == "'"${type}"'" ) | .verbs[]')
      if [[ ${api} == "authentication.k8s.io" ]]
      then
        verbs+=' userextras'
      fi
      case $type in
        # hack for https://github.com/kubernetes/kubernetes/issues/65421
        'nodes/proxy')
          verbs+='create delete get patch update'
          ;;
        'pods/attach')
          verbs+=' create get'
          ;;
        'pods/exec')
          verbs+=' create get'
          ;;
        'pods/portforward')
          verbs+=' create get'
          ;;
        'pods/proxy')
          verbs+=' create delete get patch update'
          ;;
        'services/proxy')
          verbs+=' create delete get patch update'
          ;;
        # add specialized verbs https://kubernetes.io/docs/reference/access-authn-authz/authorization/#determine-the-request-verb
        'podsecuritypolicies')
          verbs+=' use'
          ;;
        'roles')
          verbs+=' bind'
          ;;
        'clusterroles')
          verbs+=' bind'
          ;;
        'users')
          verbs+=' impersonate'
          ;;
        'groups')
          verbs+=' impersonate'
          ;;
        'serviceaccounts')
          verbs+=' impersonate'
          ;;
      esac
      #remove any leading whitespace we inadvertantly added
      verbs="$(echo -e "${verbs}" | sed -e 's/^[[:space:]]*//')"
      for verb in ${verbs}
      do
        if [[ $type =~ '/' ]]
        then
          subresource=$(echo ${type} | cut -d '/' -f 2)
          type=$(echo ${type} | cut -d '/' -f 1)
          result=$(kubectl auth can-i $verb $type --subresource=$subresource)
        else
          result=$(kubectl auth can-i $verb $type)
        fi
      case ${result} in
        'yes')
          (( yes_count+=1 ))
          printf "%-18s ${GREEN}%s${NC}\n" ${verb} ${result}
          ;;
        'no')
	  printf "%-18s ${RED}%s${NC}\n" ${verb} ${result}
	  ;;
        *)
	  echo "ERROR"
	  exit 1
	  ;;
      esac
      (( total_count+=1 ))
      done

    done
done

echo "You have ${yes_count} out of ${total_count} privileges."
echo
echo "Report generated by https://ghe.rakuten-it.com/david-somers-harris/kubez"
